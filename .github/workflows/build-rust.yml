name: Check Build
on: 
  push:
    paths:
      - '**/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust-version: [stable]
        build-mode: [debug, release]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-version }}
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.build-mode }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.build-mode }}-
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Run tests
      run: cargo test --profile ${{ matrix.build-mode }} --verbose

    - name: Build
      run: cargo build --profile ${{ matrix.build-mode }}

    - name: Functional tests
      if: matrix.build-mode == 'release'
      run: |
        cargo run --profile ${{ matrix.build-mode }} -- --help
        cargo run --profile ${{ matrix.build-mode }} -- --regex 'GO$'
        cargo run --profile ${{ matrix.build-mode }} -- --insensitive --regex "SSH$"

    - name: Upload artifact
      if: matrix.build-mode == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: sshchic-${{ matrix.os }}
        path: target/release/sshchic*
        retention-days: 5
